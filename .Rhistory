tdat <- slot(tt, 'data')
plot(tt)
dat(datt)
dim(datt)
dim(tt)
if (any(duplicated(coordinates(datt)))){
cat('some points are duplicated !')
}
table(duplicated(coordinates(datt))))
table(duplicated(coordinates(datt)))
(duplicated(coordinates(datt)))[1:10]
win.graph();par(mfrow=c(1,2))
plot(datt)
datt <-datt[!duplicated(coordinates(datt)),]
plot(datt)
raster::shapefile(datt,file.paht('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/',
'DMC_Nov2016_inspect_multi.shp')
)
raster::shapefile(datt,file.path('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/',
'DMC_Nov2016_inspect_multi.shp'))
raster::shapefile(datt,file.path('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/',
'DMC_Nov2016_inspect_multi.shp'),overwrite = T)
setwd('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation')
tt <- raster::shapefile('DMC_Nov2016_inspect_multi.shp')
tdat <- slot(tt, 'data')
table(tdat$type)
tdat2 <- tdat
tdat2$type[tdat2$type == '? samll'] <- '? small'
tdat2$type[tdat2$type == 'p smallLL'] <- 'p small'
tdat2$type[tdat2$type == 'pNULL'] <- 'p'
tdat2$type[tdat2$type == 'p?'] <- '?'
tdat2$type[tdat2$type == 'P'] <- 'Pb'
tdat2$type[tdat2$type == 'p new dead'] <- 'Pb'
table(tdat2$type)
table(tdat2$type == 'Pb')
table(substr(tdat2$type, 1, 1) %in% c('p','P'))
tt2 <- tt
tdat2$who <- 'PSAB'
slot(tt2,'data') <- tdat2
raster::shapefile(tt2, 'DMC_Nov2016_inspect_multi_v2.shp',overwrite=T)
#load the tiles
tiles <- raster::shapefile('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/images_overview.shp')
#crop the tiles inward to remove overlap
tiles_trim <- rgeos::gBuffer(tiles, byid=T, width = -40)
length(tiles_trim)
#overlap the tiles with the points
inspection_points <- raster::shapefile('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/DMC_Nov2016_inspect')
tiles_done <- sp::over(tiles_trim, inspection_points)
#number of tiles done
table(!is.na(tiles_done[,2]))
inspection_points <- raster::shapefile('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/DMC_Nov2016_inspect_multi_v2.shp')
tiles_done <- sp::over(tiles_trim, inspection_points)
#number of tiles done
table(!is.na(tiles_done[,2]))
235-149
494-235
plot(datt, col=datt$who)
plot(datt, col=as.factor(datt$who))
table(tdat2$type == 'p')
259/3
head(tdat2)
table(tdat2$who)
tdat <- slot(tt, 'data')
table(tdat2$who)
head(dat)
\\ies.jrc.it\h03\H03_QMS\H03_Projects\FISE\Competitive\FISE-PRO
plot(datt, col=as.factor(datt$who))
datt
setwd('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation')
tt <- raster::shapefile('DMC_Nov2016_inspect_multi.shp')
tdat <- slot(tt, 'data')
table(tdat$type)
tdat2 <- tdat
tdat2$type[tdat2$type == '? samll'] <- '? small'
tdat2$type[tdat2$type == 'p smallLL'] <- 'p small'
tdat2$type[tdat2$type == 'pNULL'] <- 'p'
tdat2$type[tdat2$type == 'p?'] <- '?'
tdat2$type[tdat2$type == 'P'] <- 'Pb'
tdat2$type[tdat2$type == 'p new dead'] <- 'Pb'
table(tdat2$type)
table(tdat2$type == 'Pb')
table(tdat2$type == 'p')
table(substr(tdat2$type, 1, 1) %in% c('p','P'))
tt2 <- tt
slot(tt2,'data') <- tdat2
raster::shapefile(tt2, 'DMC_Nov2016_inspect_multi_v2.shp',overwrite=T)
CanHeMonR::grow_crowns <- (r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = rep(NA,4),
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = 1:5,
outp_crown_shp_filename,
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = T, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
CanHeMonR::grow_crowns(r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = rep(NA,4),
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = 1:5,
outp_crown_shp_filename,
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = T, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
CanHeMonR::grow_crowns(r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = rep(NA,4),
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = 1:5,
outp_crown_shp_filename = 'E://beckpie/temp/test_Bp_crowns.shp',
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = T, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
CanHeMonR::grow_crowns(r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/listbgrn.tif',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = rep(NA,4),
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = 1:5,
outp_crown_shp_filename = 'E://beckpie/temp/test_Bp_crowns.shp',
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = T, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
13*4
1500/50
CanHeMonR::grow_crowns(r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/listbgrn.tif',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = rep(NA,4),
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = 1:50,
outp_crown_shp_filename = 'E://beckpie/temp/test_Bp_crowns.shp',
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = F, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
?stack
gsub('_','-',tile)
tile <- 'pt617000_4404000'
gsub('_','-',tile)
tile_multiversion <- c(tile, gsub('_','-',tile))
?grepl
raster::extent('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000_4404000.tif')
raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000_4404000.tif'))
raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif'))
as.numeric(raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif')))
as.vector(raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif')))
raster::extent(raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif')))
tt<-raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif'))
tt[1:4]
CanHeMonR::grow_crowns(r_file = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/listbgrn.tif',
seed_shpfile = '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp',
seed_extent = raster::extent(raster::raster('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif'))[1:4],
avoid_recalculation = T,
prob_cut = 99,
prob_step_down = 2,
seed_nrs = NA,
outp_crown_shp_filename = 'E://beckpie/temp/test_Bp_crowns_pt617000-4404000',
process_dir = NULL,
max_crown_RADIUS_in_m = 10,
min_crown_RADIUS_in_m = 1,
plott = F, RGBseq = c(1,2,3),
parallel = F, nWorkers = 4
)
imwd <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/'
outpdir <- '/home/beckpie/tempoutput'
file.path(outpdir,'test_Bp_crowns_pt617000-4404000')
file.path(imwd, 'ortophotos_22122016/RGBN_LUT/listbgrn.tif')
imwd <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC'
file.path(imwd, 'ortophotos_22122016/RGBN_LUT/listbgrn.tif')
file.path(imwd, 'ortophotos_22122016/visual_interpretation/eval_CB_Pb_20170125.shp')
raster::extent(raster::raster(file.path(imwd,'/ortophotos_22122016/RGBN_LUT/pt617000-4404000.tif')))[1:4]
?dismo::maxent
r_train_dir <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/texture
''
r_train_dir <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/texture'
tile <- list.files(r_train_dir, recursive = T, full.names = T)
tile <- pred_rs[grepl('.tif',tile)]
tile
tile <- tile[grepl('.tif',tile)]
tiel
tile
length(tile)
basename(tile)
substr(tile,1,16)
tile[1]
substr(basename(tile),1,16)
tile<- 'ALL'
tile <- list.files(r_train_dir, recursive = T, full.names = T)
tile <- tile[grepl('.tif',tile)]
tile <- substr(basename(tile),1,16)
tile <- unique(tile)
length(tile)
tile
tile <- 'ALL'
tile <- list.files(r_train_dir, recursive = T, full.names = T)
tile <- tile[grepl('.tif',tile)]
tile <- substr(basename(tile),1,17)
tile <- unique(tile)
tile
tile <- list.files(r_train_dir, recursive = T, full.names = T)
tile <- tile[grepl('.tif',tile)]
tile <- substr(basename(tile),1,16)
tile <- unique(tile)
cat(length(tile),' tiles are considered')
tile_i <- tile[1]
tile_i_multiversion <- c(tile_i, gsub('_','-',tile_i))
pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs <- pred_rs[grepl(paste(tile_i_multiversion, collapse = "|"),pred_rs)]
pred_rs
tile
r_train_dir
tile_i_multiversion
tile_i_multiversion
pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
pred_rs <- pred_rs[grepl('.tif',pred_rs)]
tile_i_multiversion
pred_rs <- pred_rs[grepl(paste(tile_i_multiversion, collapse = "|"),pred_rs)]
pred_rs
tile_i_multiversion <- c(tile_i, gsub('_','-',tile_i))
pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs
paste(tile_i_multiversion, collapse = "|")
tile_i_multiversion <- c(tile_i, gsub('_','-',tile_i))
pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs
r_train_dir
r_train_dir <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT'
r_train_dir <- '//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT'
tile_i_multiversion <- c(tile_i, gsub('_','-',tile_i))
pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs <- pred_rs[grepl(paste(tile_i_multiversion, collapse = "|"),pred_rs)]
pred_rs
vuln_classes = list(c('Pb'))
lapply(vuln_classes,x[[1]])
lapply(vuln_classes,[[1]])
lapply(vuln_classes,function(x){[[1]]})
lapply(vuln_classes,function(x){x[[1]]})
vuln_classes = list(c('Pb'),c('a'))
lapply(vuln_classes,function(x){x[[1]]})
vuln_classes = list(c('Pb'),c('a','asdfasdf'))
lapply(vuln_classes,function(x){x[[1]]})
sp::spsample
?sp::spsample
?sample
cbind.data.frame(NULL, data.frame(a=1, b=2))
cbind.data.frame(data.frame(), data.frame(a=1, b=2))
outp <- list[[]]
outp <- list()
outp[['aa']] <- data.frame(a=1)
outp[['bb']] <- data.frame(a=1)
outp
edit(CanHeMonR::calibrate_sicktree_model)
CanHeMonR::calibrate_sicktree_model
vuln_classes
unlist(vuln_classes)
r_train_dir
?dismo::maxent
?raster::extract
?sample
?raster::extract
?randomPoints
tile
r_train_dir
list.files(r_train_dir)
strsplit(list.files(r_train_dir),tile_i)
tt<-c('pt606000.4401000.1','pt606000.4401000.1','pt606000.4401000.1','pt606000.4401000.1','pt606000_4401000_b3_ASM','pt606000_4401000_b3_Contr')
strsplit(tt,'pt606000.4401000')
strsplit(tt,'pt606000.4401000',fixed=T)
strsplit(tt,'pt606000.4401000',fixed=F)
lapply(strsplit(tt,'pt606000.4401000',fixed=F),function(x){x[-1]}
)
unlist(lapply(strsplit(tt,'pt606000.4401000',fixed=F),function(x){x[-1]}))
tile_i_multiversion
tile_i <- 'pt606000.4401000'
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('.','-',tile_i),gsub('.','_',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('\\.','-',tile_i),gsub('.','_',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('\\.','-',tile_i),gsub('\\.','_',tile_i)))
unlist(lapply(strsplit(tt,'pt606000.4401000',fixed=F),function(x){x[-1]}))
tile_i_multiversion <- unique(c(tile_i, gsub('\\.','-',tile_i),gsub('\\.','_',tile_i),gsub('\\.','.',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('\\.','-',tile_i),gsub('\\.','_',tile_i),gsub('\\.','\\.',tile_i)))
tile_i_multiversion
tile_i_multiversion <- (c(tile_i, gsub('\\.','-',tile_i),gsub('\\.','_',tile_i),gsub('\\.','\\.',tile_i)))
tile_i_multiversion
tile_i_multiversion <- (c(tile_i, gsub('\\.','-',tile_i),gsub('\\.','_',tile_i),gsub('\\.','.',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i)))
tile_i_multiversion
pred_rs <- all_tifs[grepl(paste(tile_i_multiversion, collapse = "|"), all_tifs)]
paste(tile_i_multiversion, collapse = "|")
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i)))
tile_i_multiversion
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i),gsub('\\.','-',tile_i),,gsub('\\.','_',tile_i)))
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i),gsub('\\.','-',tile_i),gsub('\\.','_',tile_i)))
tile_i_multiversion
paste(tile_i_multiversion, collapse = "|")
?saveRDS
?saveRDS
rbind.data.frame(data.frame(a=1,b=2),data.frame())
library(CanHeMonR)
?subset
?maxent
? dismo::predict
800/20
?raster::stack
loadRDS('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/maxent_samplemaxent_training_dfs_10_samples.rdata')
?saveRDS
readRDS('//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/maxent_samplemaxent_training_dfs_10_samples.rdata')
?substr
?read.csv
?write.csv2
?read.table
?readRDS
require(rJava)
rm(list=ls())
model_dir <- "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/"
tt<-file.path(model_dir, 'maxent_samplemaxent_training_dfs_10_samples.rdsdata')
load(tt)
loadRDS(tt)
readRDS(tt)
str(readRDS(tt))
tt<-file.path(model_dir, 'maxent_samplemaxent_training_dfs_10_samples.rdata')
load(tt)
ls()
tt
rm(list=ls())
model_dir <- "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/"
load(file.path(model_dir, 'Pb.rdsdata'))
load(file.path(model_dir, 'Pb.rdata'))
ls()
saveRDS(mod2,file.path(model_dir,'Pb.rdsdata'))
mod2
mod2
?writeRaster
run_sicktree_model_multitile <- function(
predictors_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/",
fname_predictors_txt = "predictors_pt617000_4404000.txt",
MaxEntmodel_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/"
fname_MaxEntmodel_r = "samp10_Pb.rdsdata",
output_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/",
fname_output_tif){
#required R libraries
#rgdal, raster, rJava, dismo
require(raster)
require(rJava)
require(dismo)
#required software: maxent .jar. The rJava library calls it from within the dismo library
#https://www.cs.princeton.edu/~schapire/maxent/
#+++++++++++++++++++++++++++++++++++++++++++++++
#run this code in R 32 bit
#see http://stackoverflow.com/questions/7019912/using-the-rjava-package-on-win7-64-bit-with-r
#http://cran.r-project.org/web/packages/dismo/vignettes/sdm.pdf
#+++++++++++++++++++++++++++++++++++++++++++++++
if (R.Version()$arch != "i386"){
cat("This code needs to be run in 32-bit version of R\n Exiting \n")
}
#load the model
mod2 <- readRDS(fname_MaxEntmodel_r)
#load the predictor layers
raster_fnames <- unlist(read.table(fname_predictors_txt,stringsAsFactors=F)[,1])
r_pred <- raster::stack(raster_fnames)
#adjust the layernames to make them conform the model syntax
names(r_pred) <- paste0('l',substr(names(r_pred),17,nchar(names(r_pred))))
# run the model and write the output away to a file
px <- dismo::predict(r_pred, mod2,  progress = '')
px <- round(255*px)
raster::writeRaster(px,filename = fname_output_tif, overwrite = T, dataType = 'INT1U' )
return()
}
predictors_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT/"
fname_predictors_txt = "predictors_pt617000_4404000.txt"
raster_fnames <- unlist(read.table(fname_predictors_txt,stringsAsFactors=F)[,1])
raster_fnames <- unlist(read.table(file.path(predictors_dir, fname_predictors_txt), stringsAsFactors=F)[,1])
txt_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/"
raster_fnames <- unlist(read.table(file.path(txt_dir, fname_predictors_txt), stringsAsFactors=F)[,1])
raster_fnames
raster_fnames <- unlist(read.table(file.path(txt_dir, fname_predictors_txt), stringsAsFactors=F)[,1])
raster_fnames
predictors_dir
file.path(predictors_dir, raster_fnames)
output_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp/"
substr(fname_predictors_txt)
strsplit(fname_predictors_txt,"//.")
strsplit(fname_predictors_txt,".txt")
unlist(strsplit(fname_predictors_txt,".txt"))
paste0(unlist(strsplit(fname_predictors_txt,".txt"),strsplit(fname_MaxEntmodel_r,".rdsdata"))
)
fname_MaxEntmodel_r = "samp10_Pb.rdsdata"
paste0(unlist(strsplit(fname_predictors_txt,".txt"),strsplit(fname_MaxEntmodel_r,".rdsdata"))
)
strsplit(fname_MaxEntmodel_r,".rdsdata")
paste0(unlist(strsplit(fname_predictors_txt,".txt"),unlist(strsplit(fname_MaxEntmodel_r,".rdsdata"))))
unlist(strsplit(fname_MaxEntmodel_r,".rdsdata"))
nlist(strsplit(fname_predictors_txt,".txt")
unlist(strsplit(fname_predictors_txt,".txt")
)
paste0(unlist(strsplit(fname_predictors_txt,".txt")),unlist(strsplit(fname_MaxEntmodel_r,".rdsdata")))
paste0(unlist(strsplit(fname_predictors_txt,".txt")),unlist(strsplit(fname_MaxEntmodel_r,".rdsdata")), ".tif")
fname_output_tif <- file.path(output_dir,
paste0(unlist(strsplit(fname_predictors_txt,".txt")),unlist(strsplit(fname_MaxEntmodel_r,".rdsdata")), ".tif")
)
fname_output_tif
42292/365
r_train_dir <- "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/RGBN_LUT"
tile <- 'ALL',
data_outp_dir = "//ies.jrc.it/h03/CANHEMON/H03_CANHEMON/Imagery/Portugal/DMC/ortophotos_22122016/classification_temp"#, abs_samp = 1000,
parallel <- F#, nWorkers = 4){
r_train_dir
#harvest all the tif files in the directories holding covariate/predictor images
all_tifs <- list.files(r_train_dir, recursive = T, full.names = T)
all_tifs <- all_tifs[grepl('.tif',all_tifs)]
#excluded the tif files in the unprojected folder
all_tifs <- all_tifs[!grepl('orig_noPRJ', all_tifs)]
#if you want to run all the tiles in a directory, harvest the available tilenames
if (tile[1] == 'ALL'){
tile <- substr(basename(all_tifs),1,16)
tile <- unique(tile)
#only keep tiles that start  with 'pt'
tile <- tile[substr(tile,1,2) == 'pt']
cat(length(tile),' tiles are considered\n')
}
tile_counter <- 0
tile
tile <- 'ALL'
#if you want to run all the tiles in a directory, harvest the available tilenames
if (tile[1] == 'ALL'){
tile <- substr(basename(all_tifs),1,16)
tile <- unique(tile)
#only keep tiles that start  with 'pt'
tile <- tile[substr(tile,1,2) == 'pt']
cat(length(tile),' tiles are considered\n')
}
tile_i <- tile[100]
#make alternative tile code (Margherita uses these in the texture filenames)
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i),gsub('\\.','-',tile_i),gsub('\\.','_',tile_i)))
tile_i_multiversion_for_regexpr <- paste(tile_i_multiversion, collapse = "|")
# pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
#pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs <- all_tifs[grepl(tile_i_multiversion_for_regexpr, all_tifs)]
length(pred_rs)
txt_name <- paste0('predictors_', tile_i, '.txt')
txt_name
txt_name <- paste0('predictors_', gsub('-','_',tile_i), '.txt')
txt_name
pred_rs
gsub(r_train_dir, "",pred_rs)
gsub(gsub(r_train_dir,"/"), "",pred_rs)
gsub(paste0(r_train_dir,"/"), "",pred_rs)
pred_nams <- gsub(paste0(r_train_dir,"/"), "",pred_rs)
gsub(paste0(r_train_dir,"/"), "",pred_rs)
pred_names <- gsub(paste0(r_train_dir,"/"), "",pred_rs)
write_table(pred_names, txt_name)
write.table(pred_names, txt_name)
txtname
txt_name
getwd()
write.table(file.path(data_output_dir,pred_names), txt_name)
write.table(file.path(data_outp_dir,pred_names), txt_name)
file.path(data_outp_dir,pred_names)
write.table(pred_names, file.path(data_outp_dir,txt_name))
pred_names
as.vector(pred_names)
?write.table
write.table(pred_names, file.path(data_outp_dir,txt_name),col.names = F, row.names = F)
for (tile_i in tile){
#browser()
#make alternative tile code (Margherita uses these in the texture filenames)
tile_i_multiversion <- unique(c(tile_i, gsub('_','-',tile_i),gsub('-','_',tile_i),gsub('-','\\.',tile_i),gsub('_','\\.',tile_i),gsub('\\.','-',tile_i),gsub('\\.','_',tile_i)))
tile_i_multiversion_for_regexpr <- paste(tile_i_multiversion, collapse = "|")
# pred_rs <- list.files(r_train_dir, recursive = T, full.names = T)
#pred_rs <- pred_rs[grepl('.tif',pred_rs)]
pred_rs <- all_tifs[grepl(tile_i_multiversion_for_regexpr, all_tifs)]
#an empty data frame to hold the data extracted for this tile
if (length(pred_rs) == 23){################################################### this is until the copying is complete!
#check if you have any points in this tile
txt_name <- paste0('predictors_', gsub('-','_',tile_i), '.txt')
pred_names <- gsub(paste0(r_train_dir,"/"), "",pred_rs)
write.table(pred_names, file.path(data_outp_dir,txt_name),col.names = F, row.names = F)
}
}
})
